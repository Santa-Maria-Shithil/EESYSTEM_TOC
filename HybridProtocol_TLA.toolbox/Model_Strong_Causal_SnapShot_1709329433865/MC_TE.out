@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.16 of 31 December 2020 (rev: cdddf55)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 0 and seed 1056356172311048432 with 6 workers on 8 cores with 1943MB heap and 4368MB offheap memory [pid: 2895] (Mac OS X 10.16 x86_64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/MC.tla
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/HybridProtocol_TLA.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/TLC.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Naturals.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/FiniteSets.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Sequences.tla
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module HybridProtocol_TLA
Semantic processing of module TLC
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2024-03-01 16:43:45)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2212:0 @!@!@
Implied-temporal checking--satisfiability problem has 1 branches.
@!@!@ENDMSG 2212 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2024-03-01 16:43:46.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 3780 total distinct states at (2024-03-01 16:43:49)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 16:43:49
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(7) at 2024-03-01 16:43:49: 48,624 states generated (48,624 s/min), 33,438 distinct states found (33,438 ds/min), 29,683 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 1000:1 @!@!@
TLC threw an unexpected exception.
This was probably caused by an error in the spec or model.
See the User Output or TLC Console for clues to what happened.
The exception was a java.lang.RuntimeException
: Attempted to select nonexistent field "conistency" from the record
[type |-> "prepare-reply", inst |-> <<1, 2>>, status |-> "pre-accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2, prev_ballot |-> <<0, 1>>]
line 1439, col 110 to line 1439, col 123 of module HybridProtocol_TLA
@!@!@ENDMSG 1000 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ sentMsg = {}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<1, 1, 1>>
/\ clk = <<0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {}, {}>>
/\ leaderOfInst = <<{}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <CommandLeaderAction line 1825, col 9 to line 1828, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 1, 1>>
/\ clk = <<1, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <CommandLeaderAction line 1825, col 9 to line 1828, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<3, 1, 1>>
/\ clk = <<2, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>, <<1, 2>>}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <ReplicaAction line 1848, col 13 to line 1849, col 73 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 2>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 1], [type |-> "prepare", inst |-> <<1, 2>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 2], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<3, 1, 1>>
/\ clk = <<2, 0, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>, <<1, 2>>}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 2>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <ReplyPrepare line 1234, col 5 to line 1308, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 2>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 2], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2], [type |-> "prepare-reply", inst |-> <<1, 2>>, status |-> "pre-accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<3, 1, 1>>
/\ clk = <<3, 0, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 2>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <ReplyPrepare line 1234, col 5 to line 1308, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2], [type |-> "prepare-reply", inst |-> <<1, 2>>, status |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 2, dst |-> 2, clk |-> 0, prev_ballot |-> <<0, 2>>], [type |-> "prepare-reply", inst |-> <<1, 2>>, status |-> "pre-accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 2, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<3, 1, 1>>
/\ clk = <<3, 1, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 2>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 2>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2103:1 @!@!@
The error occurred when TLC was evaluating the nested
expressions at the following positions:
0. Line 1851, column 13 to line 1852, column 74 in HybridProtocol_TLA
1. Line 1852, column 13 to line 1852, column 74 in HybridProtocol_TLA
2. Line 1852, column 45 to line 1852, column 74 in HybridProtocol_TLA
3. Line 1312, column 5 to line 1445, column 86 in HybridProtocol_TLA
4. Line 1312, column 8 to line 1312, column 31 in HybridProtocol_TLA
5. Line 1313, column 8 to line 1445, column 86 in HybridProtocol_TLA
6. Line 1314, column 8 to line 1445, column 86 in HybridProtocol_TLA
7. Line 1314, column 11 to line 1314, column 22 in HybridProtocol_TLA
8. Line 1315, column 11 to line 1315, column 97 in HybridProtocol_TLA
9. Line 1316, column 11 to line 1445, column 86 in HybridProtocol_TLA
10. Line 1323, column 13 to line 1445, column 86 in HybridProtocol_TLA
11. Line 1323, column 16 to line 1323, column 54 in HybridProtocol_TLA
12. Line 1324, column 17 to line 1324, column 65 in HybridProtocol_TLA
13. Line 1324, column 32 to line 1324, column 65 in HybridProtocol_TLA
14. Line 1324, column 53 to line 1324, column 65 in HybridProtocol_TLA
15. Line 1324, column 32 to line 1324, column 65 in HybridProtocol_TLA
16. Line 1324, column 53 to line 1324, column 65 in HybridProtocol_TLA
17. Line 1325, column 17 to line 1445, column 86 in HybridProtocol_TLA
18. Line 1375, column 20 to line 1441, column 98 in HybridProtocol_TLA
19. Line 1375, column 23 to line 1376, column 121 in HybridProtocol_TLA
20. Line 1377, column 23 to line 1441, column 98 in HybridProtocol_TLA
21. Line 1378, column 25 to line 1441, column 97 in HybridProtocol_TLA
22. Line 1432, column 29 to line 1441, column 97 in HybridProtocol_TLA
23. Line 1432, column 32 to line 1436, column 81 in HybridProtocol_TLA
24. Line 1435, column 35 to line 1435, column 70 in HybridProtocol_TLA
25. Line 1435, column 58 to line 1435, column 70 in HybridProtocol_TLA
26. Line 1437, column 32 to line 1437, column 46 in HybridProtocol_TLA
27. Line 1438, column 32 to line 1441, column 97 in HybridProtocol_TLA
28. Line 1439, column 33 to line 1441, column 97 in HybridProtocol_TLA
29. Line 1439, column 36 to line 1439, column 134 in HybridProtocol_TLA
30. Line 615, column 5 to line 619, column 78 in HybridProtocol_TLA
31. Line 615, column 8 to line 615, column 20 in HybridProtocol_TLA
32. Line 615, column 8 to line 615, column 9 in HybridProtocol_TLA
33. Line 1439, column 110 to line 1439, column 123 in HybridProtocol_TLA


@!@!@ENDMSG 2103 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(8) at 2024-03-01 16:43:52: 191,197 states generated (1,289,258 s/min), 116,871 distinct states found (788,071 ds/min), 101,199 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
191197 states generated, 116871 distinct states found, 101199 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 8904ms at (2024-03-01 16:43:52)
@!@!@ENDMSG 2186 @!@!@
