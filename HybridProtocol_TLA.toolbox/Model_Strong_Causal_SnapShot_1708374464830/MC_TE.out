@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.16 of 31 December 2020 (rev: cdddf55)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 61 and seed -6132864807180117542 with 4 workers on 8 cores with 1214MB heap and 2730MB offheap memory [pid: 1062] (Mac OS X 10.16 x86_64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/MC.tla
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/HybridProtocol_TLA.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/TLC.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Naturals.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/FiniteSets.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Sequences.tla
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module HybridProtocol_TLA
Semantic processing of module TLC
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2024-02-19 15:26:59)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2024-02-19 15:27:00.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(5) at 2024-02-19 15:27:03: 15,722 states generated (15,722 s/min), 9,714 distinct states found (9,714 ds/min), 9,693 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2111:1 @!@!@
Evaluating invariant GlobalOrderingOfRead failed.
Attempted to select field "op" from a non-record value none
line 1900, col 36 to line 1900, col 45 of module HybridProtocol_TLA
@!@!@ENDMSG 2111 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ sentMsg = {}
/\ executed = <<{}, {}, {}, {}, {}>>
/\ crtInst = <<1, 1, 1, 1, 1>>
/\ clk = <<0, 0, 0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {}, {}, {}, {}>>
/\ leaderOfInst = <<{}, {}, {}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<1, 3>> :> {} @@
  <<1, 4>> :> {} @@
  <<1, 5>> :> {} @@
  <<1, 6>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<2, 3>> :> {} @@
  <<2, 4>> :> {} @@
  <<2, 5>> :> {} @@
  <<2, 6>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} @@
  <<3, 3>> :> {} @@
  <<3, 4>> :> {} @@
  <<3, 5>> :> {} @@
  <<3, 6>> :> {} @@
  <<4, 1>> :> {} @@
  <<4, 2>> :> {} @@
  <<4, 3>> :> {} @@
  <<4, 4>> :> {} @@
  <<4, 5>> :> {} @@
  <<4, 6>> :> {} @@
  <<5, 1>> :> {} @@
  <<5, 2>> :> {} @@
  <<5, 3>> :> {} @@
  <<5, 4>> :> {} @@
  <<5, 5>> :> {} @@
  <<5, 6>> :> {} )
/\ proposed = {}
/\ preparing = <<{}, {}, {}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <CommandLeaderAction line 1748, col 9 to line 1751, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}, {}, {}>>
/\ crtInst = <<2, 1, 1, 1, 1>>
/\ clk = <<1, 0, 0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}, {}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {}, {}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<1, 3>> :> {} @@
  <<1, 4>> :> {} @@
  <<1, 5>> :> {} @@
  <<1, 6>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<2, 3>> :> {} @@
  <<2, 4>> :> {} @@
  <<2, 5>> :> {} @@
  <<2, 6>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} @@
  <<3, 3>> :> {} @@
  <<3, 4>> :> {} @@
  <<3, 5>> :> {} @@
  <<3, 6>> :> {} @@
  <<4, 1>> :> {} @@
  <<4, 2>> :> {} @@
  <<4, 3>> :> {} @@
  <<4, 4>> :> {} @@
  <<4, 5>> :> {} @@
  <<4, 6>> :> {} @@
  <<5, 1>> :> {} @@
  <<5, 2>> :> {} @@
  <<5, 3>> :> {} @@
  <<5, 4>> :> {} @@
  <<5, 5>> :> {} @@
  <<5, 6>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "r"]]}
/\ preparing = <<{}, {}, {}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <CommandLeaderAction line 1748, col 9 to line 1751, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 2]}
/\ executed = <<{}, {}, {}, {}, {}>>
/\ crtInst = <<3, 1, 1, 1, 1>>
/\ clk = <<2, 0, 0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}, {}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>, <<1, 2>>}, {}, {}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<1, 3>> :> {} @@
  <<1, 4>> :> {} @@
  <<1, 5>> :> {} @@
  <<1, 6>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<2, 3>> :> {} @@
  <<2, 4>> :> {} @@
  <<2, 5>> :> {} @@
  <<2, 6>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} @@
  <<3, 3>> :> {} @@
  <<3, 4>> :> {} @@
  <<3, 5>> :> {} @@
  <<3, 6>> :> {} @@
  <<4, 1>> :> {} @@
  <<4, 2>> :> {} @@
  <<4, 3>> :> {} @@
  <<4, 4>> :> {} @@
  <<4, 5>> :> {} @@
  <<4, 6>> :> {} @@
  <<5, 1>> :> {} @@
  <<5, 2>> :> {} @@
  <<5, 3>> :> {} @@
  <<5, 4>> :> {} @@
  <<5, 5>> :> {} @@
  <<5, 6>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "r"]], [op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {}, {}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <ReplicaAction line 1771, col 13 to line 1773, col 73 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 1], [type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 2], [type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 2]}
/\ executed = <<{}, {}, {}, {}, {}>>
/\ crtInst = <<3, 1, 1, 1, 1>>
/\ clk = <<2, 0, 0, 0, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}, {}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>, <<1, 2>>}, {}, {}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<1, 3>> :> {} @@
  <<1, 4>> :> {} @@
  <<1, 5>> :> {} @@
  <<1, 6>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<2, 3>> :> {} @@
  <<2, 4>> :> {} @@
  <<2, 5>> :> {} @@
  <<2, 6>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} @@
  <<3, 3>> :> {} @@
  <<3, 4>> :> {} @@
  <<3, 5>> :> {} @@
  <<3, 6>> :> {} @@
  <<4, 1>> :> {} @@
  <<4, 2>> :> {} @@
  <<4, 3>> :> {} @@
  <<4, 4>> :> {} @@
  <<4, 5>> :> {} @@
  <<4, 6>> :> {} @@
  <<5, 1>> :> {} @@
  <<5, 2>> :> {} @@
  <<5, 3>> :> {} @@
  <<5, 4>> :> {} @@
  <<5, 5>> :> {} @@
  <<5, 6>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "r"]], [op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {<<1, 1>>}, {}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <ReplyPrepare line 1177, col 5 to line 1247, col 60 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 1], [type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<1, 2>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 2], [type |-> "prepare-reply", inst |-> <<1, 1>>, status |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> none, deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 2, dst |-> 2, prev_ballot |-> <<0, 2>>]}
/\ executed = <<{}, {}, {}, {}, {}>>
/\ crtInst = <<3, 1, 1, 1, 1>>
/\ clk = <<2, 0, 0, 0, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<1, 2>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {<<1, 1>>}, seq |-> 3, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<1, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> none, deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}, {}, {}>>
/\ leaderOfInst = <<{<<1, 1>>, <<1, 2>>}, {}, {}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<1, 3>> :> {} @@
  <<1, 4>> :> {} @@
  <<1, 5>> :> {} @@
  <<1, 6>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<2, 3>> :> {} @@
  <<2, 4>> :> {} @@
  <<2, 5>> :> {} @@
  <<2, 6>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} @@
  <<3, 3>> :> {} @@
  <<3, 4>> :> {} @@
  <<3, 5>> :> {} @@
  <<3, 6>> :> {} @@
  <<4, 1>> :> {} @@
  <<4, 2>> :> {} @@
  <<4, 3>> :> {} @@
  <<4, 4>> :> {} @@
  <<4, 5>> :> {} @@
  <<4, 6>> :> {} @@
  <<5, 1>> :> {} @@
  <<5, 2>> :> {} @@
  <<5, 3>> :> {} @@
  <<5, 4>> :> {} @@
  <<5, 5>> :> {} @@
  <<5, 6>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "r"]], [op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {<<1, 1>>}, {}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2103:1 @!@!@
The error occurred when TLC was evaluating the nested
expressions at the following positions:
0. Line 1898, column 25 to line 1909, column 104 in HybridProtocol_TLA
1. Line 1899, column 29 to line 1909, column 104 in HybridProtocol_TLA
2. Line 1900, column 32 to line 1909, column 104 in HybridProtocol_TLA
3. Line 1900, column 33 to line 1902, column 83 in HybridProtocol_TLA
4. Line 1900, column 33 to line 1901, column 60 in HybridProtocol_TLA
5. Line 1900, column 33 to line 1900, column 56 in HybridProtocol_TLA
6. Line 1900, column 36 to line 1900, column 56 in HybridProtocol_TLA
7. Line 1900, column 36 to line 1900, column 50 in HybridProtocol_TLA
8. Line 1900, column 36 to line 1900, column 45 in HybridProtocol_TLA


@!@!@ENDMSG 2103 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(5) at 2024-02-19 15:27:43: 664,830 states generated (863,714 s/min), 295,240 distinct states found (383,561 ds/min), 294,001 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
664830 states generated, 295240 distinct states found, 294001 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 46188ms at (2024-02-19 15:27:43)
@!@!@ENDMSG 2186 @!@!@
