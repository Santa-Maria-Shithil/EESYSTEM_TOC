@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.16 of 31 December 2020 (rev: cdddf55)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 57 and seed -1172486118548711234 with 6 workers on 8 cores with 1943MB heap and 4368MB offheap memory [pid: 3519] (Mac OS X 10.16 x86_64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/MC.tla
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/HybridProtocol_TLA.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/TLC.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Naturals.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/FiniteSets.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Sequences.tla
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module HybridProtocol_TLA
Semantic processing of module TLC
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2024-03-01 17:35:49)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2212:0 @!@!@
Implied-temporal checking--satisfiability problem has 1 branches.
@!@!@ENDMSG 2212 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2024-03-01 17:35:50.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 4076 total distinct states at (2024-03-01 17:35:53)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 17:35:53
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(7) at 2024-03-01 17:35:53: 53,270 states generated (53,270 s/min), 35,049 distinct states found (35,049 ds/min), 30,967 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2110:1 @!@!@
Invariant TypeOK is violated.
@!@!@ENDMSG 2110 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ sentMsg = {}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<1, 1, 1>>
/\ clk = <<0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {}, {}>>
/\ leaderOfInst = <<{}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <CommandLeaderAction line 1813, col 9 to line 1816, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<1, 2, 1>>
/\ clk = <<0, 1, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <CommandLeaderAction line 1813, col 9 to line 1816, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 1, dst |-> 2, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 1, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <Phase1Reply line 635, col 5 to line 740, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 1, clk |-> 3, committed |-> {<<2, 1>>}]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 3, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2], [inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <ReplicaAction line 1836, col 13 to line 1837, col 73 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 2], [type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 3], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 1, clk |-> 3, committed |-> {<<2, 1>>}]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 3, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2], [inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 1>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, src |-> 2, dst |-> 3], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 1, clk |-> 3, committed |-> {<<2, 1>>}], [type |-> "prepare-reply", inst |-> <<1, 1>>, status |-> "pre-accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 2, clk |-> 3, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 4, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2], [inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 1>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
7: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 1, clk |-> 3, committed |-> {<<2, 1>>}], [type |-> "prepare-reply", inst |-> <<1, 1>>, status |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 3, dst |-> 2, clk |-> 0, prev_ballot |-> <<0, 3>>], [type |-> "prepare-reply", inst |-> <<1, 1>>, status |-> "pre-accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 2, clk |-> 3, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 4, 1>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2], [inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<1, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {<<1, 1>>}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
8: <ReplicaAction line 1839, col 13 to line 1840, col 74 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "accept", inst |-> <<1, 1>>, ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 3, clk |-> 5], [type |-> "pre-accept-reply", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, commit_order |-> 2, src |-> 2, dst |-> 1, clk |-> 3, committed |-> {<<2, 1>>}]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 5, 1>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<1, 1>>, status |-> "accepted", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 3, consistency |-> "strong", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}], [inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<1, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 2>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<1, 1>>, <<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(9) at 2024-03-01 17:36:06: 1,285,624 states generated (4,102,182 s/min), 672,758 distinct states found (2,146,643 ds/min), 551,064 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
1285624 states generated, 672758 distinct states found, 551064 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2194:0 @!@!@
The depth of the complete state graph search is 9.
@!@!@ENDMSG 2194 @!@!@
@!@!@STARTMSG 2268:0 @!@!@
The average outdegree of the complete state graph is 6 (minimum is 0, the maximum 18 and the 95th percentile is 12).
@!@!@ENDMSG 2268 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 18823ms at (2024-03-01 17:36:06)
@!@!@ENDMSG 2186 @!@!@
