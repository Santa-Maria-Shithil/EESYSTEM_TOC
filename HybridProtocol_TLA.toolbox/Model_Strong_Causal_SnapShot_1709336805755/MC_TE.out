@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.16 of 31 December 2020 (rev: cdddf55)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 59 and seed 6656608872177919337 with 6 workers on 8 cores with 1943MB heap and 4368MB offheap memory [pid: 3686] (Mac OS X 10.16 x86_64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/MC.tla
Parsing file /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/HybridProtocol_TLA.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/TLC.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Naturals.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/FiniteSets.tla
Parsing file /Applications/TLA+ Toolbox.app/Contents/Eclipse/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Sequences.tla
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module HybridProtocol_TLA
Semantic processing of module TLC
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2024-03-01 18:12:02)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2212:0 @!@!@
Implied-temporal checking--satisfiability problem has 1 branches.
@!@!@ENDMSG 2212 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2024-03-01 18:12:03.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 4002 total distinct states at (2024-03-01 18:12:06)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:12:06
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(7) at 2024-03-01 18:12:06: 54,005 states generated (54,005 s/min), 36,717 distinct states found (36,717 ds/min), 32,726 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 794196 total distinct states at (2024-03-01 18:13:06)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:13:06
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(10) at 2024-03-01 18:13:06: 7,026,775 states generated (6,972,770 s/min), 3,317,306 distinct states found (3,280,589 ds/min), 2,523,107 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 1608136 total distinct states at (2024-03-01 18:31:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:31:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(10) at 2024-03-01 18:31:57: 13,632,701 states generated (6,605,926 s/min), 6,368,230 distinct states found (3,050,924 ds/min), 4,760,106 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 2476020 total distinct states at (2024-03-01 18:32:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:32:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(10) at 2024-03-01 18:32:57: 20,034,406 states generated (6,401,705 s/min), 9,221,425 distinct states found (2,853,195 ds/min), 6,745,399 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 3352704 total distinct states at (2024-03-01 18:33:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:33:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:33:57: 26,074,896 states generated (6,040,490 s/min), 11,815,737 distinct states found (2,594,312 ds/min), 8,463,025 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 4158805 total distinct states at (2024-03-01 18:34:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:34:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:34:57: 31,881,190 states generated (5,806,294 s/min), 14,387,581 distinct states found (2,571,844 ds/min), 10,228,795 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 4893620 total distinct states at (2024-03-01 18:35:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:35:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:35:57: 37,591,775 states generated (5,710,585 s/min), 16,972,155 distinct states found (2,584,574 ds/min), 12,078,544 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 5617738 total distinct states at (2024-03-01 18:36:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:36:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:36:57: 42,880,866 states generated (5,289,091 s/min), 19,316,217 distinct states found (2,344,062 ds/min), 13,698,481 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 6325261 total distinct states at (2024-03-01 18:37:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:37:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:37:57: 47,957,206 states generated (5,076,340 s/min), 21,589,582 distinct states found (2,273,365 ds/min), 15,264,408 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 7045226 total distinct states at (2024-03-01 18:38:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:38:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:38:57: 52,832,756 states generated (4,875,550 s/min), 23,807,130 distinct states found (2,217,548 ds/min), 16,761,915 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:39:57: 57,637,364 states generated (4,804,608 s/min), 26,030,959 distinct states found (2,223,829 ds/min), 18,300,238 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 8392688 total distinct states at (2024-03-01 18:40:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:40:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:40:57: 62,566,787 states generated (4,929,423 s/min), 28,305,265 distinct states found (2,274,306 ds/min), 19,912,569 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(11) at 2024-03-01 18:41:57: 66,634,812 states generated (4,068,025 s/min), 29,952,117 distinct states found (1,646,852 ds/min), 20,800,350 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 9901286 total distinct states at (2024-03-01 18:42:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:42:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2195:0 @!@!@
Checkpointing of run /Volumes/StudyMaterials/Project/EESYSTEM_TOC/HybridProtocol_TLA.toolbox/Model_Strong_Causal/24-03-01-18-12-00
@!@!@ENDMSG 2195 @!@!@
@!@!@STARTMSG 2196:0 @!@!@
Checkpointing completed at (2024-03-01 18:42:57)
@!@!@ENDMSG 2196 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(12) at 2024-03-01 18:42:57: 70,569,193 states generated (3,934,381 s/min), 31,548,372 distinct states found (1,596,255 ds/min), 21,646,681 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(12) at 2024-03-01 18:43:57: 75,128,744 states generated (4,559,551 s/min), 33,519,262 distinct states found (1,970,890 ds/min), 22,930,098 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 11257860 total distinct states at (2024-03-01 18:44:57)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2024-03-01 18:44:57
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(12) at 2024-03-01 18:44:57: 79,563,488 states generated (4,434,744 s/min), 35,444,054 distinct states found (1,924,792 ds/min), 24,186,201 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(12) at 2024-03-01 18:45:57: 83,806,212 states generated (4,242,724 s/min), 37,314,714 distinct states found (1,870,660 ds/min), 25,433,938 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 1000:1 @!@!@
TLC threw an unexpected exception.
This was probably caused by an error in the spec or model.
See the User Output or TLC Console for clues to what happened.
The exception was a java.lang.RuntimeException
: Attempted to compute the value of an expression of form
CHOOSE x \in S: P, but no element of S satisfied P.
line 1444, col 43 to line 1444, col 114 of module HybridProtocol_TLA
@!@!@ENDMSG 1000 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ sentMsg = {}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<1, 1, 1>>
/\ clk = <<0, 0, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {}, {}>>
/\ leaderOfInst = <<{}, {}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <CommandLeaderAction line 1816, col 9 to line 1819, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<1, 2, 1>>
/\ clk = <<0, 1, 0>>
/\ ballots = 1
/\ cmdLog = <<{}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <CommandLeaderAction line 1816, col 9 to line 1819, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 1, 0>>
/\ ballots = 1
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <ReplicaAction line 1839, col 13 to line 1840, col 73 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, src |-> 1, dst |-> 1], [type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, src |-> 1, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<1, 1, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{<<2, 1>>}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, src |-> 1, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 1, dst |-> 1, clk |-> 1, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<2, 1, 0>>
/\ ballots = 2
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{<<2, 1>>}, {}, {}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <ReplicaAction line 1839, col 13 to line 1840, col 73 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, src |-> 1, dst |-> 3], [type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 1], [type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 1, dst |-> 1, clk |-> 1, prev_ballot |-> <<0, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<2, 1, 0>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{<<2, 1>>}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
7: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 1], [type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 1, dst |-> 1, clk |-> 1, prev_ballot |-> <<0, 1>>], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, commit_order |-> 0, src |-> 3, dst |-> 1, clk |-> 0, prev_ballot |-> <<0, 3>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<2, 1, 1>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{<<2, 1>>}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
8: <ReplicaAction line 1842, col 13 to line 1843, col 74 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 1], [type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 1, dst |-> 3, clk |-> 3]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<3, 1, 1>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}>>
/\ leaderOfInst = <<{<<1, 1>>, <<2, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
9: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 1, dst |-> 3, clk |-> 3], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "pre-accepted", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 1, dst |-> 3, clk |-> 3, prev_ballot |-> <<1, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<4, 1, 1>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "not-seen", state |-> "not-seen", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {}, seq |-> 0, consistency |-> "not-seen", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
10: <Phase1Reply line 635, col 5 to line 740, col 72 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "prepare", inst |-> <<2, 1>>, ballot |-> <<2, 3>>, src |-> 3, dst |-> 3], [type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, deps |-> {<<2, 1>>}, seq |-> 5, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 3, dst |-> 1, clk |-> 5, committed |-> {}], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "pre-accepted", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 1, dst |-> 3, clk |-> 3, prev_ballot |-> <<1, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<4, 1, 5>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<1, 1>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 5, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
11: <ReplyPrepare line 1233, col 5 to line 1307, col 55 of module HybridProtocol_TLA>
/\ sentMsg = {[type |-> "commit", inst |-> <<1, 1>>, ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "commit", inst |-> <<2, 1>>, ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, commit_order |-> 0, clk |-> 1], [type |-> "pre-accept-reply", inst |-> <<2, 1>>, ballot |-> <<1, 1>>, deps |-> {<<2, 1>>}, seq |-> 5, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 3, dst |-> 1, clk |-> 5, committed |-> {}], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "pre-accepted", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 1, dst |-> 3, clk |-> 3, prev_ballot |-> <<1, 1>>], [type |-> "prepare-reply", inst |-> <<2, 1>>, status |-> "pre-accepted", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 5, consistency |-> "strong", ctxid |-> 0, commit_order |-> 2, src |-> 3, dst |-> 3, clk |-> 5, prev_ballot |-> <<1, 1>>]}
/\ executed = <<{}, {}, {}>>
/\ crtInst = <<2, 2, 1>>
/\ clk = <<4, 1, 6>>
/\ ballots = 3
/\ cmdLog = <<{[inst |-> <<1, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 1>>, cmd |-> [op |-> [key |-> "y", type |-> "r"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0], [inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 4, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}, {[inst |-> <<2, 1>>, status |-> "causally-committed", state |-> "done", ballot |-> <<0, 2>>, cmd |-> [op |-> [key |-> "x", type |-> "w"]], deps |-> {}, seq |-> 2, consistency |-> "causal", ctxid |-> 1, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 0]}, {[inst |-> <<2, 1>>, status |-> "pre-accepted", state |-> "done", ballot |-> <<2, 3>>, cmd |-> [op |-> [key |-> "", type |-> ""]], deps |-> {<<2, 1>>}, seq |-> 5, consistency |-> "strong", ctxid |-> 0, execution_order |-> 0, execution_order_list |-> {}, commit_order |-> 2]}>>
/\ leaderOfInst = <<{<<1, 1>>}, {<<2, 1>>}, {}>>
/\ committed = ( <<1, 1>> :> {} @@
  <<1, 2>> :> {} @@
  <<2, 1>> :> {} @@
  <<2, 2>> :> {} @@
  <<3, 1>> :> {} @@
  <<3, 2>> :> {} )
/\ proposed = {[op |-> [key |-> "x", type |-> "w"]], [op |-> [key |-> "y", type |-> "r"]]}
/\ preparing = <<{}, {}, {<<2, 1>>}>>

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2103:1 @!@!@
The error occurred when TLC was evaluating the nested
expressions at the following positions:
0. Line 1842, column 13 to line 1843, column 74 in HybridProtocol_TLA
1. Line 1843, column 13 to line 1843, column 74 in HybridProtocol_TLA
2. Line 1843, column 45 to line 1843, column 74 in HybridProtocol_TLA
3. Line 1311, column 5 to line 1451, column 86 in HybridProtocol_TLA
4. Line 1311, column 8 to line 1311, column 31 in HybridProtocol_TLA
5. Line 1312, column 8 to line 1451, column 86 in HybridProtocol_TLA
6. Line 1313, column 8 to line 1451, column 86 in HybridProtocol_TLA
7. Line 1313, column 11 to line 1313, column 22 in HybridProtocol_TLA
8. Line 1314, column 11 to line 1314, column 97 in HybridProtocol_TLA
9. Line 1315, column 11 to line 1451, column 86 in HybridProtocol_TLA
10. Line 1322, column 13 to line 1451, column 86 in HybridProtocol_TLA
11. Line 1322, column 16 to line 1322, column 54 in HybridProtocol_TLA
12. Line 1323, column 17 to line 1323, column 65 in HybridProtocol_TLA
13. Line 1323, column 32 to line 1323, column 65 in HybridProtocol_TLA
14. Line 1323, column 53 to line 1323, column 65 in HybridProtocol_TLA
15. Line 1323, column 32 to line 1323, column 65 in HybridProtocol_TLA
16. Line 1323, column 53 to line 1323, column 65 in HybridProtocol_TLA
17. Line 1324, column 17 to line 1451, column 86 in HybridProtocol_TLA
18. Line 1377, column 20 to line 1447, column 98 in HybridProtocol_TLA
19. Line 1377, column 23 to line 1378, column 121 in HybridProtocol_TLA
20. Line 1379, column 23 to line 1447, column 98 in HybridProtocol_TLA
21. Line 1380, column 25 to line 1447, column 97 in HybridProtocol_TLA
22. Line 1438, column 29 to line 1447, column 97 in HybridProtocol_TLA
23. Line 1438, column 32 to line 1442, column 81 in HybridProtocol_TLA
24. Line 1438, column 35 to line 1440, column 76 in HybridProtocol_TLA
25. Line 1438, column 62 to line 1440, column 76 in HybridProtocol_TLA
26. Line 1440, column 62 to line 1440, column 76 in HybridProtocol_TLA
27. Line 1443, column 32 to line 1443, column 46 in HybridProtocol_TLA
28. Line 1444, column 32 to line 1447, column 97 in HybridProtocol_TLA
29. Line 1445, column 33 to line 1447, column 97 in HybridProtocol_TLA
30. Line 1445, column 36 to line 1445, column 126 in HybridProtocol_TLA
31. Line 614, column 5 to line 618, column 78 in HybridProtocol_TLA
32. Line 614, column 8 to line 614, column 20 in HybridProtocol_TLA
33. Line 614, column 8 to line 614, column 9 in HybridProtocol_TLA
34. Line 1445, column 101 to line 1445, column 115 in HybridProtocol_TLA
35. Line 1445, column 101 to line 1445, column 103 in HybridProtocol_TLA
36. Line 1444, column 43 to line 1444, column 114 in HybridProtocol_TLA


@!@!@ENDMSG 2103 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(12) at 2024-03-01 18:46:44: 87,022,397 states generated (2,505,133 s/min), 38,770,718 distinct states found (1,116,101 ds/min), 26,425,766 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
87022397 states generated, 38770718 distinct states found, 26425766 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 2084269ms at (2024-03-01 18:46:44)
@!@!@ENDMSG 2186 @!@!@
